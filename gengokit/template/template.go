// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/cmd/NAME/main.gotemplate (426B)
// NAME-service/config/config.gotemplate (71B)
// NAME-service/handlers/handlers.gotemplate (62B)
// NAME-service/handlers/hooks.gotemplate (62B)
// NAME-service/handlers/middlewares.gotemplate (75B)
// NAME-service/svc/client/grpc/client.gotemplate (3.184kB)
// NAME-service/svc/client/grpc/imclient.gotemplate (1.501kB)
// NAME-service/svc/client/http/client.gotemplate (105B)
// NAME-service/svc/endpoints.gotemplate (4.272kB)
// NAME-service/svc/server/run.gotemplate (3.259kB)
// NAME-service/svc/transport_grpc.gotemplate (3.517kB)
// NAME-service/svc/transport_http.gotemplate (106B)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x31\x6f\x83\x30\x10\x85\x67\x2c\xf9\x3f\x3c\x31\x91\xa1\x78\xef\x1a\x3a\x64\x69\xa2\x34\xed\x5a\x39\xf0\x00\xab\xc4\x44\xb6\x21\x8a\x10\xff\xbd\x32\x44\x55\x86\x4e\xbe\xd3\xfb\xfc\xde\xdd\x29\x85\x6d\x5f\x11\x0d\x2d\x9d\x0e\xac\x70\xbe\x23\xb8\xc1\xfb\x1c\xc5\x1e\xef\xfb\x13\xde\x8a\xdd\x29\x97\x42\x29\x1c\xe9\x06\x6b\x8d\x6d\x56\x02\x37\xd3\x75\xe8\x47\xba\x9b\x33\x81\x08\xad\xf1\xa8\x4d\xc7\x95\xfe\xa2\xf3\xa6\xb7\xaf\x98\xa6\xfc\x51\xcf\xf3\xb3\x82\x42\x07\x3e\xcb\xb1\x8f\x88\x14\x57\x5d\xfe\xe8\x86\xb8\x68\x63\x63\x6f\x2e\xd7\xde\x05\x64\x52\x24\x69\xdd\xe9\x26\x95\x22\x91\x22\x51\x0a\xa7\x18\xba\xed\x6d\x6d\x1a\x29\x92\x6f\xa4\xd3\x94\xef\x16\xfa\xa0\x43\x8b\x97\x79\x86\x2a\x17\x39\x7d\xfa\xf0\x41\x37\x9a\x92\xd1\xee\x1f\xde\x8f\xa5\xf2\x74\x23\x5d\x2a\xc5\x26\xe6\xd7\x83\x2d\x97\x61\xb2\x0d\xa6\xd5\xe7\xf3\x5a\xe9\x40\xe8\xaa\x72\xf4\x9e\x1e\xa6\x46\x68\x79\x47\xab\x47\xe2\x4c\xda\xbf\xd3\x04\xda\x78\xd6\x38\xb8\x97\x22\x89\x6f\x7e\xd0\xce\x33\x5b\xcc\x93\x35\x2b\x3f\x0e\x36\x7b\x94\x05\x6b\x3d\x74\x61\xdd\x6b\x23\xc5\x2c\xc5\x6f\x00\x00\x00\xff\xff\xc8\x83\xaf\x12\xaa\x01\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 426, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x47, 0x43, 0x59, 0x25, 0x7, 0x73, 0x7, 0xfe, 0x20, 0x81, 0x48, 0xe8, 0xa4, 0xce, 0x26, 0x52, 0x62, 0x83, 0xae, 0xff, 0x1a, 0xfa, 0xab, 0x2c, 0x32, 0xc, 0xe2, 0x32, 0xed, 0x64, 0x4a}}
	return a, nil
}

var _configConfigGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x85\x20\x0c\x06\xe0\xfb\x4b\xde\x0e\x3d\x93\x68\x87\x71\x02\x02\x3f\x95\x88\xd4\xd0\x7a\x22\xec\xee\x37\x27\x07\x3a\x00\x12\xdd\x7c\xbc\x66\x2c\xe8\xa2\x57\x75\x3e\x63\xcf\x0d\xc3\xd8\x71\x3f\x2d\x3a\x8c\x93\xf6\x52\x65\x17\xa5\xa2\x83\x92\x66\x50\xe0\xb5\xfe\xbf\x2f\x00\x00\xff\xff\x67\x2b\xcd\x5d\x47\x00\x00\x00")

func configConfigGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_configConfigGotemplate,
		"config/config.gotemplate",
	)
}

func configConfigGotemplate() (*asset, error) {
	bytes, err := configConfigGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/config.gotemplate", size: 71, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x58, 0x6f, 0x93, 0x94, 0x9, 0xe1, 0xf3, 0x96, 0x4a, 0x87, 0xd0, 0xcf, 0x4, 0x1, 0x7a, 0xe1, 0xf7, 0x45, 0x6f, 0x1, 0x1b, 0xe6, 0x1e, 0x2, 0xe0, 0x8e, 0xd0, 0x9b, 0x67, 0xe0, 0x5f}}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1e, 0xcb, 0xd5, 0x72, 0x80, 0xc6, 0xf9, 0x82, 0x4b, 0xe0, 0x8b, 0x90, 0xb8, 0x9b, 0xbc, 0x5d, 0x8d, 0x12, 0xd4, 0x8e, 0x54, 0xf6, 0x72, 0xcb, 0xef, 0xf5, 0x12, 0xd0, 0xe1, 0xb8, 0x41, 0xc8}}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1e, 0xcb, 0xd5, 0x72, 0x80, 0xc6, 0xf9, 0x82, 0x4b, 0xe0, 0x8b, 0x90, 0xb8, 0x9b, 0xbc, 0x5d, 0x8d, 0x12, 0xd4, 0x8e, 0x54, 0xf6, 0x72, 0xcb, 0xef, 0xf5, 0x12, 0xd0, 0xe1, 0xb8, 0x41, 0xc8}}
	return a, nil
}

var _handlersMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0e\x02\x21\x0c\x05\xd0\xbd\xa7\xe8\x9a\x44\x7b\x18\x4f\x40\xec\xb7\x12\x81\x4e\xda\x4e\x66\x41\xb8\xfb\xbc\xb5\xb8\xd0\x1b\x20\xb5\x67\xfa\x19\xc1\x8a\xa9\xf6\x6f\xc9\xbf\x3a\xa5\xc3\x83\x13\xe3\xe8\x35\x11\x3c\x9a\x48\xc7\x55\x1d\xf1\x52\xa3\xaf\x39\x7d\x4c\x40\x85\xf7\x7e\xdc\x01\x00\x00\xff\xff\xcf\x9e\xe9\x81\x4b\x00\x00\x00")

func handlersMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersMiddlewaresGotemplate,
		"handlers/middlewares.gotemplate",
	)
}

func handlersMiddlewaresGotemplate() (*asset, error) {
	bytes, err := handlersMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/middlewares.gotemplate", size: 75, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0xfe, 0x9d, 0x1a, 0xaf, 0x47, 0xe8, 0x97, 0x82, 0x24, 0x50, 0x17, 0xb4, 0x49, 0x73, 0x3b, 0x68, 0xb7, 0xe5, 0x3a, 0x3d, 0xb6, 0x15, 0x9d, 0xb1, 0x8f, 0xc4, 0x27, 0xaf, 0xa7, 0x3c, 0xc1}}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\xd6\x08\x16\x52\xa0\xd0\xf7\x2c\x7c\xa9\xd3\x2d\xba\xd8\xa6\x46\x1a\x74\x0f\x45\x51\x30\xd4\x58\x26\x2c\x93\x2a\x49\x3b\x31\x04\xfd\xf7\xc5\x90\x94\x23\x27\x8e\xdb\x43\x10\x8b\xf3\x38\x1f\xef\x0d\x39\x9c\x4e\x61\x6e\x2a\x84\x1a\x35\x5a\xe1\xb1\x82\x87\x3d\x78\xbb\x75\x8e\xc3\xcd\x67\xb8\xfd\x7c\x0f\xef\x6f\x3e\xde\x73\x36\x9d\xc2\x1d\xda\xad\xd6\x4a\xd7\x11\x00\x8f\xaa\x69\xc0\xec\xd0\x3e\x5a\xe5\x11\xfc\x4a\x39\x58\xaa\x06\x03\xf8\x2b\x5a\xa7\x8c\xbe\x86\xae\xe3\xe9\x77\xdf\x8f\x0c\x70\x23\x3c\x8e\xad\xf4\xdd\xf7\x8c\x20\x0b\x21\xd7\xa2\x46\xa8\x6d\x2b\xa1\xb5\x66\xa7\x2a\x74\x20\xa0\xbe\x5b\xcc\x41\x36\x0a\xb5\x87\xa5\xb1\xe0\x57\x48\x0e\xbe\xa0\xdd\x29\x89\xfc\x56\x6c\xb0\xef\xc1\xa5\x4f\xd6\x8e\xdc\x30\xa6\x36\xad\xb1\x1e\x72\x96\x4d\xa4\xd1\x1e\x9f\xfc\x84\x65\x93\xda\x98\xba\x41\x5e\x9b\x46\xe8\x9a\x1b\x5b\x4f\x09\xfd\xb6\x65\xba\x41\x2f\x2a\xe1\x45\x80\x28\xbf\xda\x3e\x70\x69\x36\xd3\x76\x5d\x4f\xd1\x5a\x63\xdd\x84\x1d\x5b\x6a\x73\xb5\x56\x7e\x4a\x7f\xa8\xab\xd6\x28\x4d\x81\xc9\x97\xb7\x42\xbb\x90\xd4\x1b\xf8\x03\x20\x25\xc5\xb2\xe9\x14\xee\x89\xe6\x54\x32\xcb\x26\x5d\xc7\x3f\x86\xca\x16\xc2\xaf\xe0\xaa\xef\x61\xea\x76\x54\x40\xfb\x00\x64\x5c\xbc\x3b\x36\x4f\x58\x11\x38\xbe\xc5\x47\xb0\xe8\xb7\x56\x3b\x10\x7a\x20\x0d\x1e\x84\x5c\xc7\x26\x38\xa6\x5b\x1a\xad\x51\x7a\x65\x34\x87\x8f\x1e\x94\x23\xf2\xc9\x8f\x45\xd7\x1a\xed\xd4\x83\x6a\x94\xdf\x83\x59\x06\x55\xa4\x68\x1a\xb4\xe0\x0d\x54\x4a\x34\x25\x08\x5d\x41\x23\x3c\x5a\x90\x8d\x71\x58\x46\xd0\xb3\x4f\xb6\xdc\x6a\x49\x39\xe5\xb4\x08\x97\x54\x2f\x9f\x87\xd0\x73\xa3\x75\x09\xa6\x25\x9c\x03\xce\xd3\xf2\xe7\xb0\x50\x40\xde\x3e\xf0\x57\x3d\x40\x5f\x68\x4b\x08\x8a\x14\xd0\xb1\x6c\x27\x2c\x48\x99\xaa\x99\x1b\xbd\x54\x35\x63\x19\x35\xd1\x8f\x12\x96\x70\x3d\x03\x2b\x74\x8d\x87\x38\x1d\xcb\x32\xb4\x96\x0c\xcb\xfc\x4f\x29\x0b\x96\x65\x6a\x49\x0e\xe1\x8f\x19\x68\xd5\x04\x44\x16\x19\xa4\xef\x14\xcc\xf1\xff\xac\x68\x73\xb4\xb6\x84\x89\x14\x5a\x1b\x0f\xa2\x6d\x9b\x7d\xf2\x3c\x21\x47\x3d\xcb\x7a\xc6\x32\x39\x2a\xc4\x51\xa4\x6f\xdf\x8f\xda\xe2\xa8\x52\x0a\x77\xca\xfa\x0e\x97\xc6\x62\x4e\xc9\xa4\xb6\xfe\x2a\x9a\x2d\xba\x7b\xf3\xe1\x6e\x31\xff\x94\xba\x35\x97\x92\xaf\x50\x54\x68\x5d\x51\x94\x14\x3e\xeb\xba\x2b\x78\x54\x7e\x05\x17\x1e\x29\x38\xef\x7b\x96\x8d\x56\xdb\x75\x4d\x64\x92\xe9\xc2\x23\x4f\x67\x32\xf2\x4b\xd1\x08\x19\x39\xbb\x50\x03\x68\x50\xe1\x13\xfa\x95\xa9\x5c\x04\x06\xee\xbb\xee\xde\xfc\x6b\x1e\xd1\xc2\x85\x4a\x22\xbd\x4f\xa7\x01\x86\x63\xc1\x87\x95\xb0\x2b\xf0\x4b\x61\xde\xde\x38\x83\x63\x46\x6e\xf1\x31\x92\x92\xc7\xbd\xc4\x88\x2e\xd3\xef\x49\xd7\x0d\x35\xf5\x3d\xef\xba\x71\xbe\x71\x71\x32\x86\xaa\x97\x8b\xef\xb5\x34\x15\x12\xa9\x23\xeb\x1d\xfe\xdc\xa2\xf3\x03\xe6\x06\x4f\x62\xc2\x09\xc1\x01\x14\x1a\xf6\x83\x09\xe4\x5e\x28\x3e\x98\xef\xf7\xed\x90\x48\xd7\x0f\xd8\xa3\x16\xe1\x9c\xa7\xf5\xe2\x40\x55\x5e\x84\x95\xa4\x08\xea\x2a\xa9\x98\x7e\x0d\x3f\xd8\xd0\xa9\x6e\x27\x0f\x7b\x5d\x47\x80\xb1\x86\x2f\x05\xa4\x0b\x23\xb8\x7b\xc5\xfd\x35\x00\x9c\x13\xb5\x7c\x8e\x9d\xf5\x25\x1d\x10\x16\xef\x76\x22\x07\xa2\x4a\x10\xe9\x62\xe7\x73\x88\x53\xe3\x2c\xb3\x74\x1d\x09\x38\xbe\x2d\x79\xdc\x31\x40\xfe\xa6\xfb\xc5\xaf\x44\xb8\xc9\x76\x68\xbd\x03\x41\x7e\xc3\x1d\x77\xa2\x0e\xb0\x48\x87\xd6\x1b\x10\xb0\x75\x68\xaf\x2a\xb3\x11\x4a\xbf\x01\x8d\x31\x38\x2c\xac\xda\x08\xab\x9a\x3d\xed\x59\x6e\x1b\x50\x1a\x44\xba\x74\xd2\x1d\x77\xb6\x90\xfc\x07\xa4\x43\xcc\xe7\xf1\x7f\x19\x5a\xfc\x2e\x24\xa3\xb4\x47\xbb\x14\x12\xbb\xbe\x80\x7c\xf4\x35\xbe\xe8\x62\xde\xd7\xb3\xe7\x7d\x3c\xbf\xfc\x75\xcb\x15\x87\x0e\x09\x0e\x06\xc5\x0e\xfd\xf3\x42\xb9\x78\x18\x7e\x4b\xb9\x73\xe7\xe6\xa4\x70\x71\x43\x42\xbc\xa5\xdb\xaf\x35\x89\x01\x82\x80\x67\x44\x0e\xa8\xdf\x12\xee\x5c\x1d\xa7\x74\x1b\x32\xf8\x4d\xd5\x7e\x86\x19\x94\xf2\x39\xa1\x58\x30\xbc\x21\xd8\xcf\x57\x72\x31\xbf\x6f\xf1\x68\xda\x81\xf3\x76\x2b\x3d\x05\x4b\x83\x00\xbe\x7d\x77\xde\x2a\x5d\xa7\x93\x39\x9e\x36\x51\x18\xaa\x3b\x7c\x05\x01\x36\xa6\x52\x4b\x85\x2e\xce\xee\xc3\xb3\x80\x26\x69\x88\x76\xb4\x9f\xb6\xe6\x97\xe3\x04\x8a\x58\x2e\x8b\x6c\xce\xfd\xd3\x30\xa7\xbe\xa0\xae\xf2\x35\xee\xc3\x70\x8f\x19\x15\xc7\xce\xba\x43\xad\xc1\xad\x81\x53\x8e\xc3\x40\x36\xc3\x94\x83\x19\x90\x4b\x36\x1e\xd1\x34\xf6\xfa\x14\xff\xdc\xac\x0c\xb9\x0c\xe4\x14\x70\x6a\xea\x8e\xbb\xf3\x45\x76\xd2\x3f\xbd\x6e\x86\x4d\x05\x97\xc3\xcb\x91\x7f\xba\x29\x5e\x22\x42\xf2\x34\x27\x5b\xa1\xc6\xca\x64\xc3\x13\x65\xfd\xfc\x44\x09\xe9\x85\xe9\xa8\x96\xb0\x2b\xc1\x04\x9b\xf4\x4f\x3c\x54\x93\xaf\x0b\x9e\xa7\xdc\xff\x22\x63\x1c\xa4\xd1\xf1\x8c\x1e\x23\xc4\x77\xf8\x2c\x61\x5d\xc2\x2e\x4c\x90\x3e\x3c\x4b\xe2\x23\x27\x42\xc7\xcf\x9c\xcb\x4d\x05\x33\x38\x14\xf0\x8f\x51\x3a\xbf\xdc\x54\xe5\xf3\xd2\x82\xf6\x44\xaf\x9c\xf3\xa2\x18\xdc\x25\x66\xa4\x7f\x8a\xec\xff\x1f\x00\x00\xff\xff\x00\xce\x0e\xa6\x70\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3184, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x63, 0x72, 0x1f, 0xe5, 0x3a, 0x45, 0x1, 0x91, 0xd8, 0x5b, 0xa8, 0x47, 0x45, 0x45, 0x98, 0xee, 0x0, 0xf5, 0xc1, 0x3c, 0x43, 0xf0, 0x86, 0x3c, 0xec, 0xbe, 0x2d, 0x84, 0xed, 0x1a, 0x17, 0x6c}}
	return a, nil
}

var _svcClientGrpcImclientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x41\x6f\xe3\x44\x14\x3e\x27\x92\xff\xc3\xc3\xea\xc1\x46\xce\x78\x0f\x70\x89\x94\xc3\x6e\x52\xaa\xa0\xa5\x1b\xa5\xe9\x72\xec\x3a\xf6\xcb\x78\x84\x33\xe3\xbe\x99\x34\xad\xac\x9c\x10\x62\x4f\xcb\x01\xc1\x9e\x60\x25\x50\x8f\x88\x95\x90\x56\x20\x84\xf8\x35\x09\xe5\x5f\xa0\xf1\x38\x95\xb7\xed\x85\x83\xe5\x99\x79\xdf\x7c\xf3\xbd\xef\xbd\x99\x38\x86\xa1\xca\x10\x38\x4a\xa4\xc4\x60\x06\xf3\x2b\x30\xb4\xd2\x9a\xc1\xe8\x19\x1c\x3f\x9b\xc1\xe1\x68\x3c\x63\x5e\x37\x8e\x61\x8a\xb4\x92\x52\x48\xee\x10\xb0\x16\x45\x01\xea\x02\x69\x4d\xc2\x20\x98\x5c\x68\x58\x88\x02\x1d\xfa\x39\x92\x16\x4a\xf6\xa1\xaa\x58\x33\xde\x6c\xda\x11\x18\x25\x06\xdb\x61\x3b\xb7\x90\x1a\x34\x49\xd2\x2f\x12\x8e\xc0\xa9\x4c\xa1\x24\x75\x21\x32\xd4\x90\x00\x9f\x4e\x86\x90\x16\x02\xa5\x81\x85\x22\x30\x39\x5a\x8a\x13\xa4\x0b\x91\x22\x3b\x4e\x96\xb8\xd9\x80\x6e\xa6\x5e\xb7\x6c\xf1\x58\x6a\xb1\x2c\x15\x19\x08\xbc\x6e\xc7\x4f\x95\x34\x78\x69\x7c\x3b\xe6\x4a\xf1\x02\x19\x57\x45\x22\x39\x53\xc4\x63\xbb\xc3\x86\xca\x39\xf8\x5c\xf5\x52\xb5\x5c\x2a\x19\x37\xcc\x3a\xae\x2a\x36\x79\x32\xae\xd9\x26\x89\xc9\xa1\xb7\xd9\xc4\x93\x27\x8e\x4b\x98\x7c\x35\x67\xa9\x5a\xc6\xaa\x44\x69\x28\x49\x85\xe4\xed\x71\x8f\xab\xe6\xd4\x3d\xaf\x51\xaa\xd0\x71\x13\x7e\x30\x96\x63\x51\x22\x69\xdf\xeb\x86\x36\x91\x54\x49\xed\xf2\x18\x1d\x7e\xf2\xf8\xf4\xe9\xec\xac\xaa\x66\xea\xb4\x2c\x91\xe0\x8e\x1d\x67\x27\x87\xd3\xe7\xe3\xe1\xe1\xd9\xe3\xd1\x68\x0a\x03\x78\x61\xb5\x3b\x5f\x1c\xa0\xd7\x64\xd5\xff\xf8\xd1\x47\x8f\x5e\xd4\x07\x54\x55\x0f\xd6\xc2\xe4\x70\x60\x10\xfa\x03\x60\xb6\x32\x76\x91\x12\xc9\x11\x0e\x44\xbd\xb8\x3f\xe7\x33\x34\xb9\xca\xb4\xc5\x2c\x56\x32\x85\xaa\x3a\x10\xcd\xe1\x41\x92\x65\x04\xda\x90\x90\x3c\x82\xd4\x5c\x42\x63\x3b\x1b\xba\x7f\x04\x84\xe7\x2b\xd4\x66\x9c\xdd\xc2\x08\xcf\xe1\xc3\x72\xce\xaa\xea\x48\x59\x1a\x38\x10\x6c\xea\x50\xb3\xab\x72\x9f\x57\x08\x01\xa1\x2e\x1f\x40\xea\x52\x49\x8d\x2d\x68\x04\x48\x64\x3f\x45\x21\x54\x5e\xb7\x23\x16\x50\x0b\x1b\x0c\xc0\xf7\xeb\x95\x8e\x9b\x43\xe3\x33\x3b\x42\x33\x54\x72\x21\xf8\x4c\x9d\xd4\xb2\x02\x7f\x5f\x7c\x66\xad\x7e\xaa\xd6\x48\xd6\x9e\x3b\x6e\x33\xcb\xe3\x47\xe0\xdf\xaf\xcb\x7d\xf0\x7b\xa5\xf1\x43\x2b\xe3\x01\x65\x7b\x69\xff\x9b\xd1\x6e\xde\x78\xdd\xfa\xb3\xbd\x85\x64\xcb\xd6\x6a\x44\x76\x54\xa8\x79\x52\xcc\xea\x58\x10\x42\x1c\x83\x54\x3d\x55\x7a\xdd\x4e\xaa\xa4\x74\xb6\xf5\x07\xf5\xf5\x61\x23\x91\x14\x4d\xd1\x82\xd4\x5c\x46\xb5\xce\xc8\xc5\x3e\x17\x26\x1f\x4b\x8d\xe9\x8a\x30\x08\x23\xf0\xba\x9d\xdb\xf5\x61\x9e\x08\x79\x2a\x13\xba\x1a\x4b\x83\x94\x62\x69\x14\x05\x7b\x05\xc3\xfa\x32\x7f\x9a\x20\x47\xba\x1b\x47\x8a\xc0\x6f\x35\x93\xc3\xfa\x61\x04\xef\xef\x9e\xee\x3b\xa8\x4d\x70\xdb\x56\x61\x18\xba\x8a\xdb\x64\x3e\x18\x80\x14\x85\xf3\x95\xd0\xac\x48\x36\xfe\xc4\x31\x6c\xbf\xfe\x6b\xf7\xdd\xdb\x7f\xfe\xfc\x76\xf7\xc3\x9b\xdd\xeb\x77\xdb\xaf\x7e\xfb\xf7\xf5\x2f\x37\x7f\xff\xb8\x7b\x75\xed\x75\x3b\x19\x2e\x90\x6c\xf7\x4a\x36\x2c\x94\xc6\x20\x74\xbb\x6e\xde\x7e\xb9\x7b\x75\xbd\xfd\xe6\xe7\xdd\x9b\xeb\x9b\x5f\x7f\xda\xbe\x7c\xb7\x7d\xf9\xfb\xee\xfb\x3f\xac\x87\xee\xa1\xea\x0f\xa0\x9c\xb3\x63\x5c\x57\xd5\xfd\x82\xb9\x0c\x02\xcb\x6b\x09\x6d\x47\x3b\xdb\x07\xcd\x3b\xc7\xda\xb7\xa9\xf6\x9d\xf0\xdc\x41\x9d\xfc\xe6\x66\xa2\xcc\x36\xed\xe1\x7f\x01\x00\x00\xff\xff\x4f\xd6\x1f\x83\xdd\x05\x00\x00")

func svcClientGrpcImclientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcImclientGotemplate,
		"svc/client/grpc/imclient.gotemplate",
	)
}

func svcClientGrpcImclientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcImclientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/imclient.gotemplate", size: 1501, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf4, 0x60, 0x81, 0xc0, 0x25, 0xb6, 0x4c, 0x4b, 0x84, 0x3c, 0x2b, 0x93, 0xbd, 0xf8, 0x5c, 0x77, 0xe9, 0x3, 0x45, 0x8f, 0xb0, 0x68, 0xd3, 0xf2, 0x6, 0xe8, 0x2b, 0x9f, 0x95, 0x75, 0x55, 0x81}}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0xf0, 0x36, 0xf9, 0x16, 0xea, 0x9d, 0x4e, 0x73, 0x64, 0xc5, 0xad, 0xb3, 0x1b, 0x4, 0xe, 0xd8, 0xc8, 0x1e, 0xf7, 0x7a, 0x39, 0x40, 0x4c, 0xb2, 0x12, 0x83, 0x35, 0xca, 0x82, 0x6f, 0xd0}}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x6f\xdc\x38\x12\x3d\x4b\xbf\xa2\x22\x78\xe1\xee\x40\xa6\xef\x0e\x7c\xd8\x4d\xbc\xbb\x06\x36\x1f\x88\xbd\xbb\x87\x20\x08\xd8\x52\xa9\x45\x98\x22\x19\x92\xea\x76\x8f\xa0\xff\x3e\x28\x52\x52\xab\xd3\x4a\x26\x33\xc7\xc1\x1c\x0c\xdb\xfc\x78\x7c\xf5\xaa\xea\x91\xba\xbe\x86\xd7\xba\x44\xd8\xa2\x42\xcb\x3d\x96\xb0\x39\x80\xb7\xad\x73\x0c\xde\xbc\x87\x77\xef\x1f\xe1\xee\xcd\xfd\x23\x4b\xaf\xaf\xe1\x23\xda\x56\x29\xa1\xb6\x71\x01\xec\x85\x94\xa0\x77\x68\xf7\x56\x78\x04\x5f\x0b\x07\x95\x90\x18\x16\xff\x0f\xad\x13\x5a\xdd\x40\xd7\xb1\xe1\xef\xbe\x9f\x4d\xc0\x1b\xee\x71\x3e\x4b\xff\xf7\x7d\x9a\x1a\x5e\x3c\xf1\x2d\x82\xdb\x15\x29\xad\x7f\x1c\x61\xa1\xd0\xca\x73\xa1\x1c\x34\xe8\x6b\x5d\x3a\xf0\x1a\x1a\xfe\x84\x20\x54\x29\x76\xa2\x6c\xb9\x04\x54\xa5\xd1\x42\x79\x07\x95\xd5\x0d\x38\xb4\x3b\x51\xa0\xcb\x09\xc9\xe2\xd7\x16\x9d\x07\xae\x4a\xb0\xe8\x8c\x56\x0e\xc1\x1f\x0c\x06\x24\x5a\x4a\x41\x68\x87\x47\x94\x1c\xb8\x83\x3d\x4a\x49\xbf\x51\x15\xba\x44\xeb\x08\x80\xf0\x4a\x1c\xfe\xaf\xb4\x1d\x36\x06\xb4\x3c\x0c\x70\x12\xa7\x02\xdd\x5a\x70\xad\x31\xda\x92\xb8\xde\x72\xe5\xe8\x6f\x3a\x4e\x70\x29\x7e\xe1\x5e\x68\x45\x68\x95\xb6\x0d\xf7\x8e\xa5\xa9\x68\xc2\x8a\x55\x9a\x64\x55\xe3\xb3\x34\xc9\x28\x72\x7c\xf6\x59\x9a\x26\xd9\x56\xf8\xba\xdd\xb0\x42\x37\xd7\x5b\x7d\xf5\x24\xfc\x35\xfd\x8c\x8c\x69\x89\xd9\x40\xd6\x75\xec\xc3\x3f\xee\x03\xd0\x07\xee\x6b\xb8\xea\xfb\x2c\x5d\x07\x41\xef\x26\x89\x0a\x2d\x25\x16\xde\x8d\x5c\x7d\x3d\x0b\x1d\x7c\xcd\x3d\x14\xba\x31\x14\x18\x57\xc0\xcb\x72\xd4\x93\xc1\xbd\xbf\x74\x04\xd6\x20\x57\x9e\xe4\xdb\x20\xb4\x0e\x4b\xd2\x89\x43\x8d\xd2\xa0\x05\xe7\x6d\x5b\xf8\x9c\xa6\x87\xa3\x96\x4f\x12\xca\x6b\xe0\x04\xe7\x84\xda\x4a\x04\xc3\x2d\x6f\xd0\xa3\xa5\x52\xa2\xf1\x7b\x05\x3c\x66\xc8\xe6\x20\xfc\xa5\xa3\xc3\xaa\x56\x06\xa5\xab\x56\x15\xa4\xe2\x40\x59\x21\x09\xad\x41\x9b\x50\xd1\xa0\x69\xaf\x41\x7b\x35\x1e\x48\x80\x1b\xee\x84\x63\xf0\x4f\x6d\x01\x9f\x79\x63\x24\xe6\x70\xd0\x2d\x34\x62\x5b\x7b\x30\xdc\x51\x96\x67\x52\x11\xc1\xe9\xa0\x78\x8e\xb1\xba\x6c\x0b\x0c\x32\x70\x05\xb5\xf7\x86\xfd\x9b\xab\x52\x12\xc7\xbd\xf0\x35\x20\x2f\xea\xa1\x58\x61\x35\x9e\xbe\x86\xbd\xb0\x58\x42\x6b\x22\xa8\x33\x58\x88\x4a\x14\x60\xb8\xaf\x19\xac\xee\x03\x3f\xe1\x08\x7f\xc3\x37\xf2\x00\x1c\x1a\xe1\x7c\x2c\x74\x28\xd1\x89\xad\xa2\xad\x42\xed\xf4\x13\x06\x29\x1f\x62\x5a\xa6\xc6\x08\x14\xf1\x34\xd9\x31\x19\x04\x31\x2a\xc9\xd6\x73\x75\x0b\x29\x50\xf9\x53\x75\x67\x89\x3b\xf6\x98\x3c\x50\x27\x46\x38\x2c\x7f\x94\x46\xea\x86\xa8\x95\x20\x85\x1b\x8c\x65\x75\xe4\x2b\x94\x47\x5b\x71\x2a\xa8\xe5\x4c\x10\xd8\x74\xd8\x72\x9f\xb7\x2e\x3a\xd2\xd0\x58\xd7\x21\x0f\xef\x70\xff\x7a\x88\xa7\xd0\xcd\x46\xa8\xa0\x53\x33\x50\x9c\x25\x36\x1f\xdc\xc0\xb7\x56\x81\x08\x95\x4c\x04\x0b\x2e\x25\xda\x58\xcc\x03\x59\x96\x86\x70\xce\x04\xed\xd2\xae\xb3\x5c\x6d\x11\x2e\x04\xdc\xdc\x02\x1b\xd7\xbf\x8d\xc9\xe8\xfb\x34\xe9\xba\x0b\xc1\xde\xf1\x06\xfb\x7e\xdc\x0f\x00\x53\x10\x6c\x1c\x4c\xbb\xee\x8a\x46\xfb\x3e\xed\x4f\x7b\xf5\x27\x0e\xa1\xea\x84\xd5\x8c\xe1\x1a\x66\xe7\xae\x0a\xff\x0c\x83\x8f\xb0\xd7\xf1\x77\x4e\xd5\xf0\xd2\x6c\x58\xd7\xfd\x4b\xd3\x32\xb8\x10\xec\x63\x74\xc9\xc7\x83\xc1\x61\xeb\x1a\x56\xe7\x8b\xa2\x7d\xce\x56\xe5\x80\xd6\x6a\xbb\x86\x2e\x4d\x92\xd1\x5e\xc3\x20\x11\x46\xb6\xa0\x01\x71\x22\x0e\xeb\x34\x49\x44\x15\x96\xbe\xb8\x05\x25\x64\xc0\x48\x86\xac\x28\x21\x03\x4c\x9a\x24\x7d\x3a\x8d\x8e\x27\xb0\x9f\xe1\xb6\xce\x09\x25\x4d\xfa\xb4\xeb\xa2\xbc\x24\xee\x5b\x6a\xa9\xb9\xc2\xa1\x69\x2f\x3c\x06\x85\x63\xde\xe6\xa2\x5f\x78\x5c\xd2\x3d\x0a\x4f\x60\x4b\x21\x3a\x08\xf4\xe6\x7b\xe3\x8a\x87\xd0\x83\xeb\xf3\x22\x38\x09\x9e\xb0\x97\x53\x37\xde\x66\x53\x0f\x75\x94\xa8\xe9\x5e\x9b\x0d\xc7\x24\xcc\xb2\x43\xe8\x5f\x29\xa2\x01\x63\x49\xc3\xb3\x22\x08\xfb\x76\x53\x42\x1d\xfb\xa6\xb8\x02\xa3\xb8\x6a\x21\x97\x4b\xd9\x8c\xf9\x9c\x66\x76\x43\x92\xe2\x70\x50\x3f\xe6\x6a\x9e\xb3\xff\x5b\x6e\xfe\x2e\xe5\xdd\x73\x81\xc6\xc3\xde\x72\xe3\xa2\xcd\x4e\xea\x55\x02\x65\x49\x77\xcc\xd0\x9f\xc7\x86\x0d\xe9\x0d\xfe\xb4\x70\x71\xb2\xb7\xa2\x2c\x25\xee\xb9\x8d\xef\x97\xff\xba\xf1\x45\x43\x77\xb9\x31\xf2\x40\x36\x43\xd6\xe9\x09\xbc\x99\x56\x87\xbb\x01\x77\x68\x0f\x53\x2a\xa9\xad\xc8\x45\xc6\xdb\x92\xf0\xde\x1b\xba\x39\xc8\x3d\xf3\x99\x79\x15\x5c\xd1\xcd\x49\xf7\x0d\x96\xb4\x6d\x73\x00\x45\x39\x88\x37\x2a\x3e\x17\xb2\x2d\xb1\x8c\x8f\x99\x0d\x12\x05\x8a\xd9\x60\xc9\xce\xd4\x58\x1d\x39\xe5\x90\x3d\x78\xee\x5b\x97\xe5\x90\x7d\x10\x6a\x9b\xad\xd3\xd1\x1e\x5e\xce\xfc\xe1\x7b\xfb\x61\x41\x95\xfc\xc8\x86\x31\xe6\xbc\x15\x6a\x1b\xca\x49\xa8\x61\xf8\xe6\x16\x1a\x6e\x3e\xc5\xa9\xcf\x51\xfe\xae\xa7\xf4\x93\xad\xfd\x96\x7d\x25\x49\x36\xab\xa8\xec\x06\x26\x80\x3e\x1f\x20\x62\x19\x24\x7d\x9a\x26\x94\x95\x2f\x44\x29\x94\x71\x80\x9e\xe8\x75\xd1\x4e\xbe\xe4\xa0\x9f\x68\x7a\x24\xf8\x09\x9f\x3f\xbf\x82\x17\xfa\x29\x96\xa4\xe1\x4a\x14\xab\xaa\xf1\xec\xc1\x58\xa1\x7c\xb5\xca\xee\x46\x88\x29\x93\x97\x7f\x73\x97\x50\x6a\x74\xa0\xb4\x07\x7c\x16\xce\xbf\x02\x87\x38\x2f\x80\xa9\x86\x1c\xdb\xea\x8c\x48\xad\xd7\x83\x59\x95\x28\xd1\xe3\x6a\x64\x10\xe6\x8e\x01\x08\x55\xe4\xf0\xe5\x18\xc1\xa4\xe4\xcf\x6b\x26\x2a\xda\x05\xb7\xb7\x70\xa2\xde\xd0\x74\x8b\xae\x0b\xb7\x33\xf2\xab\xc5\x25\xeb\xb1\x0b\x4f\x54\x8f\x1d\xf8\x1f\xbe\x41\x89\xe5\xb1\x30\xe2\x77\xc0\x16\xfd\x58\xc6\xf3\xc7\x5d\xac\xe6\x7d\x8d\x6a\x9a\xd5\xb3\xca\x1d\xc0\x62\x01\xe6\xb1\xe1\x86\x9e\x68\xe3\x62\x88\x1f\x17\x3c\x7e\xa1\x88\x82\xde\x38\x56\x14\xf1\xf1\x39\xe3\x50\x8b\xa2\x0e\x5b\x1d\xaa\x25\x0a\xc3\xc5\x3e\xec\x1e\x9f\x35\xda\x0e\xd7\xfa\x79\x54\xc1\x79\x63\x2d\xe7\xe7\x26\xbd\xe0\xdb\xe9\xf7\xe2\xfa\xc3\x36\x75\x46\x2a\x1f\xe2\x0c\x8a\x5b\x2c\x50\xec\xe2\x03\x30\x84\xf8\xcd\xbb\x9a\xc1\x03\xe2\x04\x33\x43\x09\x13\xe3\xbb\x74\xb2\x00\x22\x4a\x45\x59\xa2\xe7\x42\x86\x37\xe4\xd8\x51\xe1\xf3\x64\x78\xfb\x72\x29\xfc\x81\xfd\xc8\x4d\x4e\x62\x9f\x9b\xca\xef\x56\xf4\x2f\xcb\xf9\x53\x5a\xce\xc9\xb6\x7c\xf9\x69\xf8\x3d\x07\xfa\x35\x00\x00\xff\xff\x9a\x16\xde\x59\xb0\x10\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4272, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0x30, 0x93, 0xa5, 0x9f, 0x65, 0x43, 0xe2, 0x5b, 0x4b, 0xe, 0x33, 0x90, 0xa8, 0x3b, 0x7b, 0x3f, 0xbe, 0xbc, 0x3f, 0x60, 0x73, 0x30, 0x1, 0x4, 0x4c, 0x5f, 0x3d, 0x95, 0x45, 0x5f, 0x38}}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x6f\xdb\x38\x13\x3e\x8b\xbf\x62\x2a\xf4\x7d\x21\x03\xae\x54\x60\xb7\x7b\xc8\xd6\x87\x36\x4e\xdb\x00\x4d\x6a\x38\x6e\xf7\xb8\xa0\xa5\x91\x4c\x54\x22\xb5\x43\xca\x6e\x20\xf8\xbf\x2f\x86\x92\x6c\xb9\x4d\xdc\x66\x73\x88\x25\xce\xcc\x33\x0f\xe7\x53\x49\x02\x97\x26\x43\x28\x50\x23\x49\x87\x19\xac\xef\xc1\x51\x63\x6d\x0c\xf3\x4f\x70\xfb\x69\x05\x57\xf3\xeb\x55\x2c\x92\x04\x96\x48\x8d\xd6\x4a\x17\x9d\x02\xec\x54\x59\x82\xd9\x22\xed\x48\x39\x04\xb7\x51\x16\x72\x55\xa2\x57\xfe\x82\x64\x95\xd1\x17\xd0\xb6\x71\xff\xbc\xdf\x8f\x04\x30\x97\x0e\xc7\x52\x7e\xdf\xef\x85\xa8\x65\xfa\x55\x16\x08\x16\x69\x8b\x24\x84\xaa\x6a\x43\x0e\x22\x01\xfd\x5f\x98\x97\xb2\x08\x8f\xaf\xc6\x8e\x5e\xf2\xca\x85\x22\x08\x4b\x53\xf0\x8f\x46\xd7\xff\x24\x1b\xe7\xea\xf1\x73\x52\xd7\x64\xf2\x50\x88\x20\x49\xe0\xb7\x0c\x16\x92\xdc\xbd\x08\xc2\xc2\x98\xa2\xc4\xb8\x30\xa5\xd4\x45\x6c\xa8\x48\x0a\xaa\xd3\x5e\x6f\xc5\x57\xbc\x43\xda\xaa\x14\x45\x50\xaf\x21\x6c\xdb\x78\xf1\xf6\xda\x53\x5c\x48\xb7\x81\x17\xfb\x3d\x7b\x69\xdb\xf8\xf4\x10\x12\xbb\x4d\x1f\x91\x6c\xa4\xce\x4a\x24\x1b\x8a\x89\x10\x5b\x49\x30\xc7\x5c\x36\xa5\xbb\x34\x3a\x57\x05\x74\x3f\x42\xe4\x8d\x4e\x41\x69\xe5\xa2\x09\xb4\x22\xe0\x28\xc4\x77\x8e\x94\x2e\xbe\x48\x8a\xfe\x7f\x62\x14\xcf\x71\xdd\x14\x6f\xb2\x8c\xa6\x10\x66\xfc\x1c\xcb\x2c\xa3\x70\x0a\xe1\xc5\xab\x97\x7f\xbc\xe4\x07\xaf\x02\x52\x67\x50\xa1\x23\x95\x5a\x28\x95\x75\xa8\x81\x35\xd1\xda\x70\xf2\x33\x27\x1f\x56\xab\x45\xef\x83\x43\x3a\x76\xf1\xca\xbb\x60\x85\x27\xa3\xbe\x5f\x2e\x2e\x7b\x54\x0e\xfd\x18\xf5\x77\x8f\x5a\x2c\x17\x97\x10\x31\xf6\xe4\x47\x70\x9f\xa7\xcf\x16\x01\xf5\x56\x91\xd1\x15\x6a\x07\x5b\x49\x4a\xae\x4b\xb4\x53\x50\x39\x58\x74\x31\xbc\x2b\x65\x61\x61\x23\xb7\x08\x35\x29\x43\xca\xdd\xfb\x5a\x86\x2b\xbd\x65\x7d\x1b\x8b\x40\xe5\x1e\x18\x2e\x66\x60\x6c\xfc\x1e\x1d\xea\x6d\x14\xce\xaf\xde\x7e\x7e\xff\xf7\x9b\xf9\x7c\x19\x4e\xfe\xec\x14\x9e\xcd\x20\x0c\x39\x29\xc1\x23\x59\x80\x99\x57\x14\xc1\xde\xa3\xfa\x8a\x3e\x45\x5d\x7c\x5a\xae\x18\xcf\x8b\x1e\xc3\x1b\x02\x0e\x33\xc8\x2b\x17\xdf\xd5\xa4\xb4\xcb\xa3\xf0\xe2\x7f\x36\x9c\x7a\xd3\xc9\xe0\xe2\x01\xe2\x6c\xfd\x6b\xbc\x47\x7e\xc6\xb4\x1f\xc0\xe4\x64\xfd\x1a\xe6\x90\xd6\x11\xe6\x5e\x08\x3f\x7f\x7c\x99\xa7\x46\x3b\xa9\xb4\x05\xb7\x41\x20\xfc\xa7\x51\x84\x19\xe4\x0a\xcb\xcc\x42\x6e\x08\x86\xe1\x23\x87\xd1\xe0\xee\x6b\x1c\xac\xad\xa3\x26\x75\xec\xf6\xc0\xdd\xfa\x02\x13\xc1\x31\x09\xc3\xc9\x81\x4a\x7f\xb0\xef\x9b\xeb\x16\x77\x57\x3a\xab\x8d\xd2\xce\x46\x13\xb0\xdb\x34\x3e\xbc\x33\x74\x92\xc0\xdb\xc6\x2a\x8d\xd6\x42\x66\x2a\xa9\x74\x2c\x02\x6e\x58\xdb\x8d\x04\xa8\xd7\x71\xdb\xc6\xfd\x80\x88\x6f\x65\x85\xfb\xfd\x5d\x47\x36\xe0\x88\x0c\x7a\x33\x18\x7a\x3e\xbe\xc5\x5d\xaf\x1f\x4d\x44\xc0\x2e\xfe\x22\x59\x0f\x43\x06\x76\xca\x6d\xa0\x52\x59\x56\xe2\x4e\x12\xda\x18\xee\x10\x0f\xd6\xc9\x58\x52\x98\x87\x3d\x30\xde\xe0\xa2\x17\xfb\x2a\xf1\xf7\x19\xee\x77\x7a\x9f\x48\x04\x6d\x4b\x52\x17\x08\xcf\x15\x67\xfc\x70\xa7\x1b\x74\x1b\x93\x59\x1e\x5c\x22\x08\xda\x76\x65\x3e\x9a\x1d\x12\x3c\x57\xfd\x75\x0f\x80\x33\x1f\xbf\x1b\xf9\x15\xdb\xf6\x07\xe9\x88\x48\xdb\xa2\xce\x18\x8d\x7b\x17\x0f\xe1\xbe\x98\x9d\xc6\xbf\xfd\x65\x4a\x3f\x38\xbb\xe0\xcd\x70\x86\xea\x74\x44\xa2\x0f\x8b\xcf\x81\xc5\x12\x53\x5e\x89\xc7\x22\x78\x62\x3a\x8e\xd7\xf9\x2e\x1f\xc7\x32\x3b\xa8\xf0\xf5\x09\x5d\x43\x1a\x0e\x67\x7d\x87\x2c\x1b\x0d\xd6\x49\x72\x16\x24\x68\xdc\x01\x4f\xdb\xbe\x0b\xa6\xe0\xc7\xe1\xf0\xc2\xe3\x5c\x82\x9f\xf8\xfd\x59\xc7\xd9\x6d\x90\x91\x6a\x69\x2d\x66\xdc\x6b\xdc\x34\xac\x5c\x9a\xa2\x40\xea\xea\x7f\xd9\xe8\x28\xcd\x87\x8d\xe3\xb7\xcc\x49\x42\x4e\xfb\xa3\x8b\xd4\x0d\xa6\x1b\xa9\x55\x2a\xcb\x63\x09\x21\x51\xca\xfa\x95\xfc\x8a\x11\x8b\x01\x89\x0c\xf5\x16\xd7\xda\x21\x51\x53\xbb\x21\x24\xb1\x08\x0a\x73\x8c\xcf\x41\xfe\xa1\x3b\x89\x18\xae\xb7\xed\x76\x56\x37\xf4\x07\x43\xa6\xde\xad\xc4\xa0\x34\x45\xbc\xe0\x99\x58\xea\x28\x74\x24\xb5\xe5\x99\x18\x0e\x3b\x90\x1f\xfa\x6d\x92\xe6\xa3\xe9\xcc\xe0\x41\xc5\x8c\xfd\x1a\xeb\x5b\x12\x6f\x9a\x6f\xbe\x27\xab\xb8\x63\x12\x85\x89\x87\xe9\x3e\x1d\x92\x70\xda\xa9\xf7\x34\xdf\x31\x0d\x2f\x89\xaf\x75\x86\xdf\x26\x67\x4c\xd3\x2a\x2b\x95\xc6\xc7\x11\x2e\x3b\x85\x73\x18\xfc\x4f\x95\x67\x30\x16\x9d\xc2\x39\x0c\x7b\x5f\xad\x4d\xf9\x38\xc4\x9d\x97\x9f\x43\x70\x24\xd3\x33\x1c\x56\x2c\x9e\xf8\xf8\xfa\xa2\x78\xfd\xa2\xd3\xfc\xe8\x33\xf8\x46\x67\x3e\xd0\xd1\x49\x36\xa6\x50\xf1\x7c\x1a\x0a\xcc\x7f\x43\x1c\x72\xf9\x84\x94\xb3\xe1\x77\x19\x1f\x76\x03\x5f\x68\x33\x8c\x18\x1e\x51\x2c\x38\x94\xdb\xb1\x23\x7f\xce\xfa\xf8\x09\xb4\x19\x93\xf6\x3d\xf9\x5f\x48\xb3\x61\x38\x1d\x73\x1e\x96\x15\xb3\x29\xf5\x94\x5b\x89\x99\x6b\x74\x3d\x9f\x28\x74\x69\xfd\x80\xb2\xca\xbd\xee\xb3\x19\x68\x55\x7a\xb7\x87\xdb\x20\x11\xbf\x76\xe3\x46\x04\x7e\xea\x05\x96\xb6\xe3\x90\x30\x54\xb7\xbb\x4e\x23\xe2\x27\x81\xff\x30\x1b\xfa\x84\x7c\x97\xd4\xeb\x78\x89\x05\x33\xa2\x47\x76\x60\x64\xa7\x60\x69\x7b\x52\x0d\x36\xee\x62\x59\xea\x71\xf8\x96\x8d\x7e\x26\x4e\xa3\x84\xdf\x14\x07\xe8\xf5\x8b\x6e\x1a\xec\x85\xf8\x37\x00\x00\xff\xff\x1a\x36\xad\xf0\xbb\x0c\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 3259, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x72, 0x35, 0x88, 0xf5, 0x53, 0xf0, 0x1, 0x9d, 0xff, 0x9a, 0x9e, 0xfb, 0x16, 0xf4, 0xb8, 0xd3, 0xb3, 0xb0, 0xd4, 0x2, 0xbd, 0x9b, 0x29, 0xa1, 0xc, 0x74, 0xc1, 0x5, 0xb0, 0x77, 0xa0, 0x7c}}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\xc1\x8e\xdb\x36\x13\x3e\xcb\x80\xdf\x61\x7e\x23\xf8\x61\x05\x36\xd5\x5e\x17\xd8\x4b\x76\xd3\x24\x68\x93\x2c\xb6\x46\x7a\x08\x82\x80\x96\xc6\x32\x61\x9a\xd4\x92\xb4\x37\xae\xe0\xa7\xe8\x03\xf4\xde\x4b\x8f\xe9\xa9\xcf\x93\xbe\x45\x31\x24\x25\xcb\x6b\xaf\xd7\x0d\x10\xc0\x12\x3f\xce\x7c\x33\xdf\xc7\xa1\x36\xcb\xe0\x4a\x17\x08\x25\x2a\x34\xdc\x61\x01\xd3\x0d\x38\xb3\xb2\x96\xc1\xf5\x7b\x78\xf7\x7e\x02\x2f\xaf\xdf\x4c\x58\xbf\x97\x65\x70\x8b\x66\xa5\x94\x50\x65\x40\xc0\xbd\x90\x12\xf4\x1a\xcd\xbd\x11\x0e\xc1\xcd\x85\x85\x99\x90\x18\xd0\x1f\xd0\x58\xa1\xd5\x05\xd4\x35\x8b\xbf\xb7\xdb\xee\x0a\x5c\x73\x87\xdd\x65\x7a\x26\x48\xbf\x57\xf1\x7c\xc1\x4b\x04\xbb\xce\xe9\x31\xcb\x60\xd2\x04\x87\xca\xe8\xb5\x28\xd0\x82\x45\xb3\x46\x33\xb6\xa2\x40\x98\x0a\x55\x08\x55\x5a\x98\x69\x03\x6e\x8e\x50\xde\xde\x5c\x81\x33\x5c\xd9\x4a\x1b\x17\x18\xbd\x71\xb0\x72\x42\x8a\x5f\xd1\x7a\x4c\xbb\x9c\x95\xa6\xca\xd9\xcf\x3e\x1e\xa3\x84\x62\x49\xaf\x61\xd8\xef\x25\x03\x85\x2e\x9b\x3b\x57\x0d\xe8\x21\xd7\xca\xe1\x17\x37\x20\x50\x32\x28\xb5\x2e\x25\xb2\x52\x4b\xae\x4a\xa6\x4d\xe9\x03\x65\x4b\x74\xbc\xe0\x8e\x07\x14\xbd\x6a\x33\xc1\xa0\x14\x6e\xbe\x9a\xb2\x5c\x2f\xb3\x52\x8f\x17\xc2\x65\xf4\x7f\x9f\x4a\xd8\xd8\x54\x4d\xbc\x44\x8e\xfd\x5e\x52\x4d\x61\x50\xd7\xec\xe6\xc5\x1b\xcf\xef\x86\xbb\x39\x8c\xb7\x5b\x62\xd6\xef\x25\x75\x3d\x06\x31\x83\xd2\xc1\x50\xa2\x02\x16\xf7\xb1\xb7\xe8\xe6\xba\xb0\x29\x7c\x0f\xd4\x5d\x00\x80\x2c\x83\x7f\x7e\xfb\xfb\xdb\xd7\x3f\xbf\x7d\xfd\xfd\xdb\x5f\x7f\xf4\x7b\xc9\x42\x38\x7d\x8a\x5d\x2e\x54\x99\xe9\x0a\x55\xfc\xed\xbb\xd1\x41\x77\x96\xba\xbf\xc7\xa5\x1e\x44\x6a\xa8\x0a\x4a\x9f\x46\x41\xdf\xf2\x05\xbe\xba\xbd\xb9\x0a\x5d\x87\x25\x5f\xa0\x05\x0e\x16\x1d\xe8\x19\x81\x2b\x2d\x94\xb3\xc0\xd7\x5c\x48\x3e\x95\x08\x9c\xd6\xbd\xae\x75\xdd\x16\xf7\x8e\x2f\x71\xbb\x6d\xa5\x9b\xad\x54\xfe\x20\xf4\x70\x17\xeb\x65\xf3\x6b\x04\xba\x72\x42\x2b\x0b\x8c\xb1\x3d\x81\xa2\x0b\xde\xfb\xe5\x14\xaa\x29\x7b\x24\x19\xd4\xfd\x5e\x62\x3b\x60\x0b\x17\x97\xf0\xf1\xd3\xe3\xd1\x68\x43\x72\x6c\xf9\x05\xce\xb4\xc1\x61\x63\x9b\x89\xbe\x0a\x2e\x4b\x47\xfd\x5e\xb2\x3d\x48\x73\x09\xbc\xaa\x50\x15\xc3\xbd\xd7\x6d\x49\x8c\xb1\xf4\x7c\x37\x24\x87\x56\x20\xe9\xd0\x50\x35\x1d\x21\xd9\x2b\xa9\xa7\x5c\x4e\xfc\xda\x30\x25\x07\x29\x3d\xd6\xd5\xbe\xb8\x89\x41\xb7\x32\x0a\xfe\x4f\x65\x86\xe2\xea\x90\xa3\xae\x61\xa2\x7f\xd2\xf7\x68\x60\xaf\x9d\x81\x44\x5d\x1b\xae\x4a\x84\x67\x82\xd2\x3e\xe4\xea\x21\x49\x5d\x37\x01\x9e\x89\xa8\xc4\x05\xec\xb7\xf3\x1d\xde\x47\xcd\x69\x43\xd2\x0a\xcf\xea\xba\xdd\xd3\x78\x60\xe4\x21\xd7\x98\xeb\xc2\x9b\xa5\x03\xb9\xc5\xbb\x15\xda\x88\x78\xa9\x8e\x22\x6c\xa5\x95\xc5\x00\x89\xad\xc6\xbb\x86\x19\x0c\x6e\xe8\x88\x84\xda\x92\x7d\xf9\x18\x63\xcd\x2e\x94\x16\x9b\x13\x49\xff\x92\xe3\xba\x9e\xb0\x8c\x3f\xb5\x8c\xc8\xb5\xa6\x19\x06\xf9\x46\x34\x29\x5a\xbe\x83\x11\x28\x21\xd3\x34\xed\x64\xf7\xa2\x45\x8a\xde\x69\x5d\x1d\xb7\xfd\xde\x36\x1e\xd4\x9d\x94\x20\x96\x95\xc4\x25\xd2\x51\xa2\xf9\x59\xd7\xaf\xb4\x2f\xf7\xf8\x01\x11\xca\xa1\x99\x71\x9a\x5c\x6e\x53\x61\x37\x90\x75\x66\x95\x3b\x3a\x42\x67\x28\x7f\x44\x78\x80\x07\x5d\x79\xcd\x55\x21\xd1\x50\xbc\xb6\x88\xa6\x80\x18\xcb\x5f\x0d\x1d\x0e\x4e\xef\xea\xf9\x0f\xa5\x3c\x4d\xd8\xcf\xa0\xa1\x85\xe7\xbb\x64\xe9\x2e\x41\x5b\xc3\x30\x77\x5f\x20\xde\x27\x2c\x8a\x37\x02\x83\x77\xf0\xdc\x4f\x9d\x1d\x3e\xfa\x71\xb2\xa9\x1a\x5a\x29\x0c\x0f\x41\xc1\x92\x1d\xd4\x08\xd0\x18\x4d\xc9\xfb\xbd\xe4\x33\xc5\xae\xfc\x2b\x22\x4e\x67\xe2\xa0\xad\xc1\x5c\x64\x27\x22\xe7\xc9\xd0\x28\x21\x6f\x1b\x03\xff\xbb\x24\x13\xf9\x60\xcd\x39\x57\x42\xfa\x88\x71\x4e\xc5\xb7\x06\x2b\x76\x0e\xbf\xd4\xbb\xd2\x0b\x55\xd7\x51\x34\xaf\x58\xec\x7a\x38\x9c\xe7\xb4\x3c\xcb\xe0\xd4\x49\x06\x41\x57\xc7\x83\xeb\x3e\x6c\x88\x88\x1f\x48\x33\x37\xe7\x8e\x14\x59\xa3\xa1\x8b\x27\xb8\x3f\xdc\x37\x87\x0e\x34\x31\xb4\xd3\xc0\x61\x65\xd1\x8c\x0b\xbd\xe4\x42\x9d\x02\x33\xb8\x31\x62\xc9\x8d\x90\x1b\xda\x32\x5b\x49\x10\xca\x5f\x7a\xdd\xeb\xeb\x54\x25\xc3\xcf\x87\x96\xa1\x6a\x6e\xf1\x6e\x67\xd2\x9a\xfc\xd1\x79\xda\xf3\x01\x19\xec\xe2\xb2\xd9\x74\x4c\xa7\x03\xb3\x75\x95\xbd\x7b\x42\xb3\x30\x2e\xcf\xd4\xec\xe4\x6c\x3d\x2a\x5a\xd8\xd1\x40\x1e\x55\xed\x69\x3d\x62\x0e\xaf\xde\x09\x8d\x2b\xb9\x39\x4f\xb4\x93\xa5\x1c\x53\xad\xa5\x70\xae\x6c\xb6\xa2\x4e\x36\xdb\xce\x3b\x60\x5d\xe5\x6c\xf5\x98\x74\xaf\x51\x56\x68\x2c\x3d\xf9\x5a\x0e\x3e\x44\x8e\x8f\xaa\x65\xd1\x22\xd9\xdb\xeb\xf4\x21\xc0\xd3\xa6\x99\xbb\x18\xc1\xda\x53\xf7\x86\x58\x16\x61\x82\x88\x19\xac\xf7\x46\x4a\xf8\xde\x45\x58\xe0\xc6\x4b\x5f\x14\xf4\xd7\x88\x76\x73\x6a\x77\x93\x88\x86\xf8\x92\x3b\x18\x2e\x52\xb8\x9f\x8b\x7c\xee\xa1\x52\x82\x24\xe9\x9a\x30\x5c\x15\xfe\x82\xa2\xcf\x76\x76\xc5\x95\x56\x22\xe7\xf2\x35\xf2\x02\xcd\x8f\xb8\xa1\x0f\x4c\x17\x33\x59\x1d\x0c\x24\x1c\xe4\x5c\xc1\x14\xdb\x18\x79\x8e\xd6\x62\x41\xd9\x51\xb8\x39\x9a\x98\xdb\x03\xa8\x21\x97\x6d\xc5\xbf\x08\x37\xff\xc0\xe5\x0a\xc3\xd8\xa4\x82\x3f\x7e\xf7\x29\x7d\x1a\xf9\x08\xc1\xe1\x22\xed\x84\x88\xf7\xf1\x4e\xcb\xdc\x7d\xf1\x2a\xfe\x1b\x00\x00\xff\xff\x9a\x96\x9c\xb2\xbd\x0d\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 3517, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5c, 0x78, 0x47, 0xe1, 0xa, 0xe2, 0x6a, 0xd1, 0x1e, 0x85, 0xfe, 0x26, 0x8c, 0x8a, 0x35, 0x71, 0x8a, 0x65, 0xff, 0xe6, 0xb7, 0xba, 0x80, 0x84, 0xea, 0xbe, 0xe2, 0xf, 0xa7, 0xc7, 0xb0, 0x6b}}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0x57, 0x56, 0xc6, 0xb4, 0xe5, 0x1f, 0xf4, 0x1d, 0xa5, 0xda, 0x23, 0xea, 0x8f, 0xfb, 0xff, 0xae, 0x4b, 0x12, 0xe4, 0xf6, 0xbf, 0x11, 0xa6, 0x4, 0x83, 0x53, 0xfd, 0xbf, 0xce, 0x4a, 0x47}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate":            cmdNameMainGotemplate,
	"config/config.gotemplate":            configConfigGotemplate,
	"handlers/handlers.gotemplate":        handlersHandlersGotemplate,
	"handlers/hooks.gotemplate":           handlersHooksGotemplate,
	"handlers/middlewares.gotemplate":     handlersMiddlewaresGotemplate,
	"svc/client/grpc/client.gotemplate":   svcClientGrpcClientGotemplate,
	"svc/client/grpc/imclient.gotemplate": svcClientGrpcImclientGotemplate,
	"svc/client/http/client.gotemplate":   svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate":            svcEndpointsGotemplate,
	"svc/server/run.gotemplate":           svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate":       svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate":       svcTransport_httpGotemplate,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": {nil, map[string]*bintree{
		"NAME": {nil, map[string]*bintree{
			"main.gotemplate": {cmdNameMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"config": {nil, map[string]*bintree{
		"config.gotemplate": {configConfigGotemplate, map[string]*bintree{}},
	}},
	"handlers": {nil, map[string]*bintree{
		"handlers.gotemplate": {handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": {handlersHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": {handlersMiddlewaresGotemplate, map[string]*bintree{}},
	}},
	"svc": {nil, map[string]*bintree{
		"client": {nil, map[string]*bintree{
			"grpc": {nil, map[string]*bintree{
				"client.gotemplate": {svcClientGrpcClientGotemplate, map[string]*bintree{}},
				"imclient.gotemplate": {svcClientGrpcImclientGotemplate, map[string]*bintree{}},
			}},
			"http": {nil, map[string]*bintree{
				"client.gotemplate": {svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": {svcEndpointsGotemplate, map[string]*bintree{}},
		"server": {nil, map[string]*bintree{
			"run.gotemplate": {svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": {svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": {svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
